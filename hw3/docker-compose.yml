version: "3.8"

services:
  db:
    image: postgres:15-alpine
    container_name: hw3-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: diary_db
      POSTGRES_USER: diary_user
      POSTGRES_PASSWORD: diary_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U diary_user -d diary_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hw3-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://diary_user:diary_password@db:5432/diary_db
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./backend:/app:cached
      - backend_node_modules:/app/node_modules
    command: pnpm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hw3-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      WDS_SOCKET_PORT: 3000
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./frontend:/app:cached
      - frontend_node_modules:/app/node_modules
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  default:
    name: hw3_network
