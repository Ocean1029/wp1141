services:
  db:
    image: postgres:15-alpine
    container_name: hw4-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: trip_timeline_db
      POSTGRES_USER: trip_user
      POSTGRES_PASSWORD: trip_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trip_user -d trip_timeline_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hw4-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./backend/src:/app/src:cached
      - ./backend/prisma:/app/prisma:cached

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hw4-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./frontend:/app:cached
      - frontend_node_modules:/app/node_modules
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  default:
    name: hw4_network

